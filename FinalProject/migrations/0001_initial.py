# Generated by Django 4.0 on 2021-12-17 00:51

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Costumer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('CC', 'Company Costumer'), ('PC', 'Physical Costumer')], max_length=255)),
                ('clientName', models.CharField(max_length=255)),
                ('CNPJ', models.IntegerField(blank=True)),
                ('email', models.EmailField(max_length=255)),
                ('createDate', models.DateField(auto_now_add=True)),
                ('priority', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Urgent', 'Urgent')], max_length=255)),
                ('state', models.CharField(default='', max_length=50)),
                ('city', models.CharField(default='', max_length=50)),
                ('address', models.CharField(default='', max_length=50)),
                ('zCode', models.CharField(default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('serialNumber', models.CharField(default='', max_length=255)),
                ('brand', models.CharField(default='', max_length=20)),
                ('description', models.TextField()),
                ('createDate', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tittle', models.CharField(default='', max_length=30)),
                ('priority', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Urgent', 'Urgent')], default='', max_length=255)),
                ('status', models.CharField(choices=[('OPN', 'Open'), ('IPS', 'In Progress'), ('WFR', 'Waiting for response'), ('ESC', 'Escaled'), ('CLS', 'Closed')], max_length=255)),
                ('description', models.TextField()),
                ('plate', models.CharField(default='', max_length=8)),
                ('comment', models.TextField(blank=True)),
                ('createDate', models.DateField(auto_now_add=True)),
                ('endDate', models.DateField(blank=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FinalProject.costumer')),
                ('createdBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticketCreator', to='FinalProject.user')),
                ('responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticketResponsible', to='FinalProject.user')),
            ],
        ),
        migrations.CreateModel(
            name='serviceOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tittle', models.CharField(default='', max_length=30)),
                ('status', models.CharField(choices=[('CTD', 'Created'), ('APR', 'Aproved'), ('WFS', 'Waiting for supply'), ('WFC', 'Waiting for schedule'), ('SCH', 'Scheduled'), ('DLV', 'Delivered'), ('BLL', 'Billed'), ('WRT', 'Warrantly'), ('CNL', 'Canceld')], default='', max_length=50)),
                ('description', models.TextField(blank=True)),
                ('plate', models.CharField(default='', max_length=8)),
                ('comment', models.TextField(blank=True)),
                ('createDate', models.DateField(auto_now_add=True)),
                ('schedule', models.DateField(blank=True, default='2021-12-16')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FinalProject.costumer')),
                ('createdBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='osCreator', to='FinalProject.user')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FinalProject.product')),
                ('responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='osResponsible', to='FinalProject.user')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='createdBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FinalProject.user'),
        ),
    ]
